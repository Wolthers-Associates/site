version: '3.8'

services:
  web:
    image: ghcr.io/your-username/trips-wolthers:latest  # Will be updated by CI/CD
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    environment:
      - ENVIRONMENT=production
      - DOMAIN=trips.wolthers.com
    volumes:
      - ./logs:/var/log/nginx
      - ./ssl:/etc/nginx/ssl:ro
      - ./docker/nginx.prod.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - database
    networks:
      - wolthers-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/trips/"]
      interval: 30s
      timeout: 10s
      retries: 3

  database:
    image: mysql:8.0
    container_name: wolthers_db_prod
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME:-wolthers_trips}
      MYSQL_USER: ${DB_USER:-wolthers_user}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - ./database/my.cnf:/etc/mysql/conf.d/custom.cnf:ro
      - ./backups:/backups
    networks:
      - wolthers-network
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${DB_ROOT_PASSWORD}"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Backup service
  backup:
    image: mysql:8.0
    container_name: wolthers_backup
    restart: "no"
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME:-wolthers_trips}
    volumes:
      - ./backups:/backups
      - ./scripts/backup.sh:/backup.sh:ro
    networks:
      - wolthers-network
    depends_on:
      - database
    entrypoint: ["sh", "/backup.sh"]

  # SSL certificate renewal
  certbot:
    image: certbot/certbot:latest
    container_name: wolthers_certbot
    restart: "no"
    volumes:
      - ./ssl:/etc/letsencrypt
      - ./ssl-challenge:/var/www/certbot
    command: certonly --webroot --webroot-path=/var/www/certbot --email admin@wolthers.com --agree-tos --no-eff-email -d trips.wolthers.com

  # Monitoring
  monitoring:
    image: prom/prometheus:latest
    container_name: wolthers_monitoring
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    networks:
      - wolthers-network
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'

volumes:
  mysql_data:
    driver: local
  prometheus_data:
    driver: local

networks:
  wolthers-network:
    driver: bridge 